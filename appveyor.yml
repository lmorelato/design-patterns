version:
    '1.0.0.{build}'
image:
    Visual Studio 2017
configuration:
    Release
environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
branches:
  only:
  - master
skip_tags:
    true
init:
  # Good practise, because Windows line endings are different from Unix/Linux ones
  - cmd: git config --global core.autocrlf true
  # Display .NET Core version
  - cmd: dotnet --version
install:
  # Installing code coverage tools..
  - nuget install OpenCover -OutputDirectory packages -Version 4.7.922
  # Installing sonar
  - cmd: dotnet tool install --global dotnet-sonarscanner --version 4.6.0
before_build:
   # SonarQube analyzer start
   - cmd: dotnet-sonarscanner begin
        /k:"lmorelato_design-patterns"
        /o:"lmorelato-github"
        /d:sonar.host.url="https://sonarcloud.io"
        /d:sonar.login="%SONAR_TOKEN%"
        /d:sonar.cs.opencover.reportsPaths="c:\projects\design-patterns\coverage.xml"
build_script:        
    # Build & Publish
    - cmd: dotnet build DesignPatterns.sln
    - cmd: dotnet publish .\src\DesignPatterns\DesignPatterns.csproj -c Release
artifacts:
    - path: '.\src\DesignPatterns\bin\release\netcoreapp2.2\publish'
      name: artifacts
      type: zip
test_script:
    # Code coverage Report
    - .\packages\OpenCover.4.7.922\tools\OpenCover.Console.exe
        -register:user
        -oldStyle
        -target:"dotnet.exe"
        -output:"coverage.xml"
        -filter:"+[*]* -[*.Tests]*"
        -targetargs:"test --logger:trx;LogFileName=results.trx /p:DebugType=full .\tests\DesignPatterns.Tests\DesignPatterns.Tests.csproj"
after_test:
  # Uploading to codecov the code coverage report
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "coverage.xml"
  # SonarQube analyzer end
  - cmd: dotnet-sonarscanner end /d:sonar.login="%SONAR_TOKEN%"
cache:
    - '%USERPROFILE%\.nuget\packages'
    - packages -> appveyor.yml